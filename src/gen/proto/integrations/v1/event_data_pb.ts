// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file integrations/v1/event_data.proto (package integrations.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Customer, Order } from "./order_pb.js";

/**
 * @generated from enum integrations.v1.Event
 */
export enum Event {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: TRANSACTION_CREATED = 1;
   */
  TRANSACTION_CREATED = 1,

  /**
   * @generated from enum value: TRANSACTION_SUCCESS = 2;
   */
  TRANSACTION_SUCCESS = 2,

  /**
   * @generated from enum value: TRANSACTION_FAILURE = 3;
   */
  TRANSACTION_FAILURE = 3,

  /**
   * @generated from enum value: TRANSACTION_EXPIRED = 4;
   */
  TRANSACTION_EXPIRED = 4,

  /**
   * @generated from enum value: TRANSACTION_CHARGE = 5;
   */
  TRANSACTION_CHARGE = 5,

  /**
   * @generated from enum value: SUBSCRIPTION_CREATED = 6;
   */
  SUBSCRIPTION_CREATED = 6,

  /**
   * @generated from enum value: SUBSCRIPTION_PAUSED = 7;
   */
  SUBSCRIPTION_PAUSED = 7,

  /**
   * @generated from enum value: SUBSCRIPTION_RESUMED = 8;
   */
  SUBSCRIPTION_RESUMED = 8,

  /**
   * @generated from enum value: SUBSCRIPTION_UPDATED = 9;
   */
  SUBSCRIPTION_UPDATED = 9,

  /**
   * @generated from enum value: SUBSCRIPTION_DELETED = 10;
   */
  SUBSCRIPTION_DELETED = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(Event)
proto3.util.setEnumType(Event, "integrations.v1.Event", [
  { no: 0, name: "UNKNOWN" },
  { no: 1, name: "TRANSACTION_CREATED" },
  { no: 2, name: "TRANSACTION_SUCCESS" },
  { no: 3, name: "TRANSACTION_FAILURE" },
  { no: 4, name: "TRANSACTION_EXPIRED" },
  { no: 5, name: "TRANSACTION_CHARGE" },
  { no: 6, name: "SUBSCRIPTION_CREATED" },
  { no: 7, name: "SUBSCRIPTION_PAUSED" },
  { no: 8, name: "SUBSCRIPTION_RESUMED" },
  { no: 9, name: "SUBSCRIPTION_UPDATED" },
  { no: 10, name: "SUBSCRIPTION_DELETED" },
]);

/**
 * @generated from message integrations.v1.EventData
 */
export class EventData extends Message<EventData> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: integrations.v1.Event event = 2;
   */
  event = Event.UNKNOWN;

  /**
   * @generated from field: optional integrations.v1.Order order = 3;
   */
  order?: Order;

  /**
   * @generated from field: optional integrations.v1.Customer customer = 4;
   */
  customer?: Customer;

  constructor(data?: PartialMessage<EventData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "integrations.v1.EventData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "event", kind: "enum", T: proto3.getEnumType(Event) },
    { no: 3, name: "order", kind: "message", T: Order, opt: true },
    { no: 4, name: "customer", kind: "message", T: Customer, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventData {
    return new EventData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventData {
    return new EventData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventData {
    return new EventData().fromJsonString(jsonString, options);
  }

  static equals(a: EventData | PlainMessage<EventData> | undefined, b: EventData | PlainMessage<EventData> | undefined): boolean {
    return proto3.util.equals(EventData, a, b);
  }
}

