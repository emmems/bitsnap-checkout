// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file jobs/v1/integration_event_job.proto (package jobs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Environment } from "../../common/v1/environment_pb.js";
import { EventData } from "../../integrations/v1/event_data_pb.js";

/**
 * @generated from message jobs.v1.IntegrationEventJob
 */
export class IntegrationEventJob extends Message<IntegrationEventJob> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId = "";

  /**
   * @generated from field: common.v1.Environment environment = 2;
   */
  environment = Environment.PRODUCTION;

  /**
   * @generated from field: integrations.v1.EventData event_data = 3;
   */
  eventData?: EventData;

  constructor(data?: PartialMessage<IntegrationEventJob>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "jobs.v1.IntegrationEventJob";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment", kind: "enum", T: proto3.getEnumType(Environment) },
    { no: 3, name: "event_data", kind: "message", T: EventData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationEventJob {
    return new IntegrationEventJob().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationEventJob {
    return new IntegrationEventJob().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationEventJob {
    return new IntegrationEventJob().fromJsonString(jsonString, options);
  }

  static equals(a: IntegrationEventJob | PlainMessage<IntegrationEventJob> | undefined, b: IntegrationEventJob | PlainMessage<IntegrationEventJob> | undefined): boolean {
    return proto3.util.equals(IntegrationEventJob, a, b);
  }
}

